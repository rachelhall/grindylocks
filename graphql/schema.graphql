### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Mutation {
  createPark(address_number: Int!, city: String!, country: String, description: String!, lat: Int!, lon: Int!, name: String!, post_code: Int, region: String, region_code: String, street: String!): Park!
  createPost(description: String!, parkId: String, title: String!): Post!
}

type Park {
  address_number: Int
  city: String
  country: String
  description: String
  id: ID
  lat: Int
  lon: Int
  name: String
  post_code: Int
  posts: [Post]
  region: String
  region_code: String
  street: String
  surface: String
}

type ParkEdge {
  cursor: String
  node: Park
}

type ParkPageInfo {
  endCursor: String
  hasNextPage: Boolean
}

type Post {
  account: String
  comment: String
  description: String
  id: String
  title: String
  user: String
}

type PostEdge {
  cursor: String
  node: Post
}

type PostPageInfo {
  endCursor: String
  hasNextPage: Boolean
}

type PostResponse {
  edges: [PostEdge]
  pageInfo: PostPageInfo
}

type Query {
  parks(after: String, first: Int): Response
  posts(after: String, first: Int): Response
}

type Response {
  ParkPageInfo: ParkPageInfo
  edges: [ParkEdge]
}

enum Role {
  ADMIN
  USER
}

type User {
  email: String
  id: String
  image: String
  name: String
  role: Role
}